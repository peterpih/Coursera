x_inv <- x$getinv()                            # has the inverse matrix been computed?
if(is.null(x_inv)) {                           # non NULL indicates inverse has already been calculated
x_orig <- x$get()                        # if not
x_inv <- solve(x_orig, ...)              # compute the inverse
x$setinv(x_inv)                          # cache it
}
x_inv                                          # return inverse matrix
}
x<-matrix(rnorm(100), 10,10)
v<-makeCacheMatrix(x)
cacheSolve(v)
cacheSolve(v)
dir()
Sys.glob("*.*")
Sys.glob("*.R")
setwd("specdata")
dir()
lapply("001.csv", read.csv)
a<-lapply("001.csv", read.csv)
class (a)
a<-sapply("001.csv", read.csv)
class (a)
b<-as.dataframe(a)
b<-as.data.frame(a)
class(b)
b
c<- read.csv("001.csv")
class(c)
c
?sapply
a<-sapply("001.csv", read.csv, simplyfy=F)
a<-sapply("001.csv", read.csv, simplify=F)
class(a)
aa<-rbind(a,a)
class(aa)
class(a)
a<-read.csv("001.csv")
class(a)
aa<-rbind(a,a)
class(aa)
a<- lapply("001.csv, read.csv")
a<- lapply("001.csv, read.csv)
a<- lapply("001.csv", read.csv)
class(a)
a<- sapply("001.csv", read.csv)
class(a)
a<- sapply("001.csv", read.csv, simp)
x
names(x) <-c("a","b","c","d","e","f","g","h","i","j")
x
x<-list(a,2,3,4)
x
x<-list(1,2,3,4)
x
names(x)<-c("a","b","c","d")
x
x["a"]
x[.(a)]
chicago<-readRDS("chicago.rds")
library(dplyr)
rm(list=ls())
library(dplyr)
chicago<-readRDS("chicago.rds")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
restData <- read.csv("./data/restaurants.csv")
file.exists("./data")
dir("data")
getwd()
setdw("..")
setwd("..")
getwd()
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
curl
load.packages("XML")
load.package("XML")
0
quit()
curl
quit()
quit()
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
mylist
mylist[1]
mylist[[1]]
mylist[[2]]
mylist[[3]]
mylist$list
names(mylist)
mylist$letters
mylist$""
mylist$
""
unname(mylist)
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
mylist
firstElement <- function(x){x[1]}
sapply(mylist, firstElement)
firstElement <- function(x){x[[1]]}
sapply(mylist, firstElement)
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1,destfile="./data/reviews.csv",method="curl")
download.file(fileUrl2,destfile="./data/solutions.csv",method="curl")
lbrary(curl)
library(curl)
download.file(fileUrl1,destfile="./data/reviews.csv",method="curl")
?curl
library("curl")
library("libcurl")
install.package("libcurl")
quit()
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Exploratory_Data_Analysis")
swirl()
?qbeta
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight
)
?xyplot
a<-xyplot(weight ~ Time | Diet, BodyWeight)
class(a)
?panel.lmline()
?text()
?trellis.par.set()
?par()
?print.trellis()
?geom
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
class(g)
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?stats_smooth
??stats_smooth
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
g <- xyplot()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
pbinom(6,size=8, prob=0.5, lower.tail=FALSE)
pbinom(6,size=8, prob=0.5)
?pbinom
pbinom(5, size=8, prob=0.5, lower.tail=FALSE)
pbinom(6, size=8, prob=0.5, lower.tail=FALSE)
pbinom(10, size=8, prob=0.5, lower.tail=FALSE)
pbinom(8, size=8, prob=0.5, lower.tail=FALSE)
pbinom(6, size=8, prob=0.5, lower.tail=FALSE)
quit()
pnorm(1160, mu=1020, sd=50)
pnorm(1160, mean=1020, sd=50)
pnorm(1160, mean=1020, sd=50, lower.tail=F)
1-pnorm(1160, mean=1020, sd=50)
pnorm(140, mean=0, sd=0.049, lower.tail=F)
pnorm(2.8, mean=0, sd=0.049, lower.tail=F)
pnorm(2.8, mean=0, sd=1, lower.tail=F)
qnorm(2.8)
qnorm(2.8, mean=1020
)
qnorm(2.8, mean=1020, sd=50)
qnorm(0.75, mean=1020, sd=50)
?rnorm
seed(124)
a<-rnorm(100)
sd(a)
seed(124)
a<-rnorm(100)
?seed
set.seed(124)
a<-rnorm(100)
sd(a)
a<-rnorm(100)
sd(a)
a<-rnorm(100)
sd(a)
a<-rnorm(100)
mean(a)
a<-rnorm(100)
mean(a)
a<-rnorm(100)
mean(a)
a<-rnorm(100)
mean(a)
a<-rnorm(1000)
mean(a)
a<-rnorm(1000)
mean(a)
a<-rnorm(1000)
mean(a)
a<-rnorm(10000)
mean(a)
a<-rnorm(10000)
mean(a)
a<-rnorm(10000)
mean(a)
a<-rnorm(10000)
mean(a)
symmary(a)
summary(a)
a<-rnorm(10000, mean=0, sd=1)
mean(a)
summary(a)
pnorm(0.5, mean=a$Median, sd=sd(a))
pnorm(0.5, mean=mean(a), sd=sd(a))
pnorm(0.5, mean=mean(a), sd=sd(a))
pnorm(1, mean=mean(a), sd=sd(a))
pnorm(2.8, mean=mean(a), sd=sd(a))
qnorm(0.99724, mean=mean(a), sd=sd(a))
pnorm(1160, mean=1020, std=50)
pnorm(1160, mean=1020, sd=50)
qnorm(0.9974449, mean=1020, sd=50)
qnorm(2.8, mean=1020, sd=50)
qnorm(2.8, mean=0, sd=1)
pnorm(2.8, mean=0, sd=1)
dnorm(2.8, mean=1020, sd=50)
dnorm(a, mean=1020, sd=50)
qnorm(0.75, mean=1020, sd=50)
?binom
?binomial
?pbinom
pbinom(2, size=500, prob=0.01)
library(UsingR)
install.packages("UsingR")
library(UsingR)
data(father.son)
x<-father.son$sheight
(mean(x)+c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/2
(mean(x)+c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
mean(x)
qnorm(0.975)
sd(x)
summayr(x)
summary(x)
nrow(x)
size(x)
class(x)
x
size.of(x)
length(x)
(mean(x)+c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
(mean(x)+c(-1,0,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
?round
qnorm(70, mean=80, sd=10)
?qnorm
pnorm(70, mean=80, sd=10)
qnorm(0.95, mean=1100, sd=75)
choose(5,4) * 0.5^5 + choose(5,5) * 0.5^5
ppois(10, lambda=5 * 3)
qnorm(93, mean=100,sd=10)
pnorm(93, mean=100,sd=10)
qnorm(0.95, mean=100,sd=10,left.tail=FALSE)
?qnorm
qnorm(0.95, mean=100,sd=10,lower.tail=FALSE)
qnorm(0.95, mean=100,sd=10)
pnorm(116.4485, mean=100,sd=10)
qnorm(0.95, mean=1100, sd=75)
qnorm(0.95, mean=1100, sd=75/sqrt(100))
choose(5,6)0.5^6 + choose(6,6)0.5^6
choose(5,6) * 0.5^6 + choose(6,6) * 0.5^6
choose(6,5) * 0.5^6 + choose(6,6) * 0.5^6
?runif
pnorm(0.51, mean=0.5, sd=(sqrt(1/12)))
pnorm(0.51, mean=0.5, sd=(sqrt(1/12)/sqrt(100)))
sqrt(1/12/100)
sart(1/12)*sqrt(100)
sqrt(1/12)*sqrt(100)
sqrt(1/12)/sqrt(100)
ppois(20, lambda=16.5 * 2)
pnorm(14, mean=15, sd=10/sqrt(100))
pnorm(16, mean=15, sd=10/sqrt(100))
a<-pnorm(14, mean=15, sd=10/sqrt(100))
b<-pnorm(16, mean=15, sd=10/sqrt(100))
(a+b)/2
library(swirl)
install_from_swirl("Statistical Inference")
rm(list=ls())
library(XML
)
mps.doc <- htmlParse(mps)
mps <- "http://news.bbc.co.uk/2/hi/uk_politics/8044207.stm"
mps.doc <- htmlParse(mps)
mps.tabs <- readHTMLTable(mps.doc)
str(mps_tabs)
str(mps.tabs)
length(mps.tabs)
getwd()
setwd("Miscellaneous")
dir()
libarary(XML)
#
url <- "http://www.boerse-frankfurt.de/en/equities/realtime+quotes#tab_id=dax&reiter=dax"
dax.doc <- htmlParse(url)
dax.tabs <- readHTMLTable(dax.doc)
str(dax.tabs)
lenth(dax.tabs)
langth(dax.tabs)
length(dax.tabs)
tad.tabs$Name
dax.tabs$Name
names(dax.tabs)
str(dax.doc)
length(dax.doc)
head(dax.doc)
dax.doc
rm(list=ls())
install.packages("Swirl")
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl
swirl()
swirl9)
swirl()
next
swirl()
.8
0.64
0.64
?mypdf
mypdf
integrate(1.6, lower=0, upper=1)
?integrate
integrate(mypdf(1.6), lower=0, upper=1)
mypdf
integrate(mypdf, lower=0, upper=1.6)
.32
2
info()
1.414
sqrt(2)
0.3
0
.7
0
info
skip
skip()
q
deck
52
4/52
0
12/52
2/51
1-((2+1)/36)
deck
52
4/52
0
12/52
2/51
(0.997 * 0.001)/(0.997 * 0.001 + (1-0.985) * (1-0.001))
(0.997 * 0.001)/((0.997 * 0.001) + (1-0.985) * (1-0.001))
skip
skip()
((0.997 * 0.001) + (1-0.985) * (1-0.001))
(1-0.985) * (1-0.001)
((0.997 * 0.001) + (1-0.985) * (1-0.001))
(0.997 * 0.001)/((0.997 * 0.001) + (1-0.985) * (1-0.001))
3.5
expect_dice
dice_high
expect_dice(expect_high)
expect_dice(dice_high)
expect_dice(dice_low)
0.5(edh _ edl)
0.5(edh + edl)
0.5*(edh + edl)
integrate(myfunc, 0,2)
spop
mean(spop)
allsam
apply(allsam, mean)
apply(allsam, allsam[,2],  mean)
apply(allsam, allsam[1,],  mean)
apply(allsam, [1,],  mean)
apply(allsam, allsam[1,],  mean)
?apply
apply(allsam, 1,  mean)
smeans
mean(smeans)
dice_sqr
sum(dice_sqr * dice_fair)
ex2_fair <-sum(dice_sqr * dice_fair)
ex2_fair - 3.5*3.5
sum(dice_sqr * dice_high) - 3.5*3.5
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000), 1, mean))
play()
a<-matrix(rnorm(10000),1000)
str(a)
head(a)
nxt()
1/sqrt(10)
1/sqrt(120)
sd(apply(runif(10000),1000), 1, mean)
sd(apply(matrix(runif(10000),1000), 1, mean)
)
2/sqrt(10)
sd(apply(matrix(rpois(10000),1000,1,mean)))
sd(apply(matrix(rpois(10000),1000),1,mean)))
sd(apply(matrix(rpois(10000),1000),1,mean))
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
?choose
choose(5,2)
choose(5,x)
choose(5,x)*(.8)^x*(.2)^(5-x)
choose(5,x)*(.8)^x*(.2)^(5-x)+choose(5,x)*(.8)^x*(.2)^(5-x)+choose(5,x)*(.8)^x*(.2)^(5-x)
skip()
?pbinom
pbinom(2,5,0.8,FALSE)
qnorm(0.1)
0
qnorm(0.975,3,2)
3 + 2 * 0.975
3 + 2 * 1.96
qnorm(0.975)
pnorm(1.96)
pnorm(1200,1020,50)
pnorm(1200,1020,50,FALSE)
qnorm((1200-1020)/50)
a<-(1200-1020)/50
a
pnorm((1200-1020)/50)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(0.75,1020.50,FALSE)
qnorm(0.75,1020.50)
qnorm(0.75,1020,50)
0.53
0.53
ppois(3,lambda=(2.5*4))
ppois(3,2.5*4)
binom(5,1000,0.01)
pbinom(5,1000,0.01)
ppois(5,(1000*0.01))
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6+c(1,-1)qnorm(0.975*sqrt(0.6 * (1-0.6)/100))
0.6+c(1,-1)*qnorm(0.975*sqrt(0.6 * (1-0.6)/100))
0.6+c(1,-1)*qnorm(0.975)*sqrt(0.6 * (1-0.6)/100))
0.6+c(1,-1)*qnorm(0.975)*sqrt(0.6 * (1-0.6)/100)
0.6+c(1,-1)*qnorm(0.975)*sqrt(0.6 * .4/100)
0.6+c(1,-1)*qnorm(0.975)*sqrt(.6 * .4/100)
0.6+c(1,-1)*qnorm(.975)*sqrt(.6 * .4/100)
0.6+c(-1,1)*qnorm(.975)*sqrt(.6 * .4/100)
?binom.test
x<-binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb<-5/94.32
lamb+c(-1,1)*qnorm(.975)*sqrt(lamb/5)
lamb+c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
g2
g1
s<-sd(difference)
1.58 + c(-1,1)* s/sqrt(10)
mn
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(2.4-0.7)
skip
skip()
(8-1)*15.34^2 + (21-1)*18.23^2
sp<-(8-1)*15.34^2 + (21-1)*18.23^2
ns <- 27
sp<-sqrt(sp/ns)
(132.86-127.44)+c(-1,1)*1/(8+21-2)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
var(g1)
length(g1)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sqrt((9*var(sp)+9*var(md))/18)
?qt
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
quit()
